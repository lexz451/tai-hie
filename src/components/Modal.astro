---
import Icon from "astro-icon";
import { getImage } from "astro:assets";
const { bg, id, color } = Astro.props;

const opBg = bg && await getImage({src: bg, format: "webp"});

---

<div id={`${id}-modal`} class="modal fixed min-h-screen w-full">
    <div class="absolute z-10 top-0 right-0 mt-4 mr-4">
        <button class="close text-white text-3xl hover:text-gray-300">
            <Icon name="close" class="w-8" />
        </button>
    </div>
    <div
        class="absolute inset-0 bg-cover bg-center"
        style={`background-color: ${color}`}
    >
        {bg && <img src={opBg.src} alt="" class="w-full h-full object-cover" />}
    </div>
    <div class="absolute inset-0 bg-black opacity-20"></div>
    <div
        class="relative min-h-screen flex flex-col justify-center items-center"
    >
        <slot />
    </div>
</div>

<style lang="postcss">

    @keyframes opening {
        from {
            opacity: 0.25;
            clip-path: circle(0% at var(--x) var(--y));
        }
        to {
            clip-path: circle(100%);
            opacity: 1;
            visibility: visible;
        }
    }

    @keyframes close {
        from {
            clip-path: circle(100% at var(--x) var(--y));
            opacity: 1;
        }
        to {
            clip-path: circle(0% at var(--x) var(--y));
            opacity: 0.25;
            visibility: collapse;
        }
    }

    .modal {
        animation: close 0.25s cubic-bezier(0.075, 0.82, 0.165, 1) forwards;
        will-change: clip-path opacity visibility;
    }
    
    .modal.active {
        animation: opening 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
    }
</style>

<script>
    import { activePyramidItem } from "../store/pyramid";
    import { disableBodyScroll, enableBodyScroll } from "body-scroll-lock";

    function showModal(id: string, coords: any[]) {
        const modal = document.getElementById(`${id}-modal`);
        modal.classList.add(`active`);
        modal.style.setProperty(`--x`, `${coords[0]}px`);
        modal.style.setProperty(`--y`, `${coords[1]}px`);
    }

    function hideModal(id: string) {
        const modal = document.getElementById(`${id}`);
        modal.classList.remove(`active`);
    }

    activePyramidItem.subscribe((item) => {
        if (item) {
            const [id, coords] = item;
            // const modal = document.getElementById(`${item}-modal`);
            disableBodyScroll(document.body);
            showModal(id, coords);
        } else {
            enableBodyScroll(document.body);
        }
    });

    const modals = document.querySelectorAll(`.modal`);
    for (let modal of modals) {
        const closeBtn = modal.querySelector(`button.close`);
        closeBtn.addEventListener(`click`, () => {
            activePyramidItem.set(null);
            hideModal(modal.id);
        });
    }
</script>
